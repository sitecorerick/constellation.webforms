Instructions
============
Use this library to enhance the use of HtmlTextWriter by including the Constellation.Html
namespace in your controls.

Example of HtmlTextWriter Extensions
------------------------------------

namespace Example
{
	using System.Web.UI;
	using System.Web.UI.WebControls;
	using Constellation.Html;

	public class ExampleControl : WebControl
	{
		public override void RenderControl(HtmlTextWriter writer)
		{
			using (writer.RenderDiv(id: "someid", cssClass: "someclass"))
			{
				using (writer.RenderP())
				{
					writer.Write("this is the inner text of the paragraph.");
					writer.RenderImg("/blank.gif", "alternate descriptive text", id:"imageid", cssClass:"imagecssclass");
				}
			}
		}
	}
}

Example Output
--------------

<div id="someid" class="someclass">
	<p>
		this is the inner text of the paragraph.
		<img src="/blank.gif" alt="alternate descriptive text" id="imageid" class="imagecssclass" />
	</p>
</div>


Example of DynamicHtmlTextWriter
--------------------------------
This is a class that acts as a wrapper around an <see cref="HtmlTextWriter"/> instance to add dynamic type
functionality when rendering html. The method name in a dynamic method call will serve as tag name and the 
named parameters will be attribute names. The underscore character in the named parameters will be replaced 
with a dash to support having a dash in attribute names. It's important to only use named parameters in the 
method rather than just passing the arguments or mixing named parameters with positional parameters. In such 
scenarios the behavior will be very nondeterministic. The only method that will not be translated to HTML tags 
is Write(), and only the supported overloads will be called and an exception will be thrown by CLR if a 
non-supported overload is called.

namespace Example
{
	using System.Web.UI;
	using System.Web.UI.WebControls;
	using Constellation.Html;

	public class ExampleControl : WebControl
	{
		protected override void Render(HtmlTextWriter writer)
		{
			dynamic dwriter = new DynamicHtmlWriter(writer);

			using (dwriter.Div(Id: "someId", Class: "someclass"))
			{
				using (dwriter.P())
				{
					dwriter.Write("this is the inner text of the paragraph.");
				}
				dwriter.Write(Src:"/blank.gif", Alt:"alternate descriptive text", Id:"imageid", Class:"imagecssclass");
			}
		}
	}
}

Example Output
--------------

<div id="someid" class="someclass">
	<p>
		this is the inner text of the paragraph.
		<img src="/blank.gif" alt="alternate descriptive text" id="imageid" class="imagecssclass" />
	</p>
</div>